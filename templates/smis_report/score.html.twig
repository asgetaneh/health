{% extends 'base.html.twig' %}

{% block subTitle %}
	<li class="active">{% trans %}
		SMIS{% endtrans %}</li>
	<li class="active">
		<a href="{{path('smis_report')}}">{% trans %}
			<strong>
				SMIS Report{% endtrans %}
			</strong>
		</a>
	</li>
{% endblock %}
		{% block stylesheet %}
		<style>
		table {

				border-collapse: collapse;
				width: 50%;
			}

			td,
			tr,
			th {
				border: 1px solid #000;
				text-align: left;
				padding-left: 15px;
				font-size: 12px;

			}
			</style>
		{% endblock %}

{% block body %}
	<div class="row">
		<div class="col-md-12 col-sm-12 widget-container-col" id="widget-container-col-8">
			<div class="widget-box widget-color-blue" id="widget-box-8">
				<div class="widget-header">
					<h5 class="widget-title bigger lighter">
						<strong>SMIS Report
						</strong>
					</h5>
					<div class="widget-toolbar">
						<span class="badge badge-info">
							{% trans %}Total{% endtrans %}
							:
							<strong>{{principalReports.getTotalItemCount()}}</strong>

						</span>
					</div>
				</div>
				<div class="widget-body">
					<div class="widget-toolbox" id="widget-toolbox-1"></div>
					<div class="widget-main padding-16">
						<div class="row">
							<div class="search-area well col-md-12">

								<div class="row">
									{{ form_start(form,{'attr': {'role':'form','id':'filteruserform'}}) }}
									<div class="form-group col-md-4" style="display:inline;">
										{{ form_label(form.planningYear," Year ") }}
										{{ form_widget(form.planningYear,{'attr':{ 'class': ' select2 form-control','required':'true'}}) }}
									</div>
									<div class="form-group col-md-4" style="display:inline;">
										{{ form_label(form.principalOffice," Principal Office ") }}
										{{ form_widget(form.principalOffice,{'attr':{ 'class': ' select2 form-control','required':'true'}}) }}
									</div>
									<div class="form-group col-md-1" style="display:inline;">

										<button type="submit" class="btn btn-sm btn-primary">{% trans %}filter{% endtrans %}</button>
									</div>
                                                                             <button  title="print in excel"id="btnExport" class="btn btn-sm btn-info" onclick="javascript:xport.toCSV('print2');">Excel </button> <!-- <em>&nbsp;&nbsp;&nbsp;Export the table to XLS with CSV fallback for IE & Edge</em> -->  
{#

										<button type="button" name="tablexcel" value="excelprint" onclick="return print1('print2')" class="btn  btn-info btn-xs ">
											<i class=" fa fa-file-excel text-light"></i>
											Excel Print
										</button>#}
 									<div class="form-group col-md-1" style="display:inline;">

										<button type="submit" name="print" value="print" class="btn  btn-danger btn-xs ">
											<i class=" fa fa-file-pdf text-danger"></i>
											PDF
										</button>
									</div>
									{{ form_end(form) }}
								</div>
							</div>
						</div>
                                                <div  id="print222">  
						<div class="table-responsive">
							<table class="table table-striped table-bordered table-hover"  id="print2">
								<thead>
									<tr>
										<th>#</th>
										<th>Key Performance Indicator</th>
										<th>Weight</th>
										<th>Initiative</th>
										<th>Weight</th>
										<th colspan="12">Success indicators(Total Cascade Initiative={{totalInitiative}},Suitable Initiative={{suitableInitiatives|length}})</th>
									</tr>
									<tr>
										<th></th>
										<th></th>
										<th></th>
										<th></th>
										<th></th>
										<th>Target</th>
										<th>Achievement</th>
										<th>Q1T</th>
										<th>Q1A</th>
										<th>Q2T</th>
										<th>Q2A</th>
										<th>Q3T</th>
										<th>Q3A</th>
										<th>Q4T</th>
										<th>Q4A</th>

{#										<th>Remarks</th>#}
{#										<th>Task List</th>#}
									</tr>
								</thead>
								{% if value %}
									<tbody>
										{% set c = 0 %}
										{% set count =  principalReports.getItemNumberPerPage() * (principalReports.getCurrentPageNumber() -1) %}
										{% for principal in principalReports   %}
											{% for suitable in suitableInitiatives   %}
												{% if principal.suitableInitiative.id == suitable.id %}
													<tr>
														{% set count = count + 1 %}

														<td>{{ count }}</td>
														<td> {{principal.suitableInitiative.initiative.keyPerformanceIndicator}}</td>
														<td>{{principal.suitableInitiative.initiative.keyPerformanceIndicator.weight}}</td>
														<td>{{principal.suitableInitiative.initiative}}</td>
														<td>{{principal.suitableInitiative.initiative.weight}}</td>
														<td>{{ getYearlyPlan( suitable,'year')}}</td>
														<td>{{ getYearlyPlanAccomp( suitable,'year')}}</td>
														<td>{{ getQuarterPlan( suitable,1)}}</td>
														<td>{{ getQuarterPlanAccomp(suitable,1)}}</td>
														<td>{{ getQuarterPlan(suitable,2)}}</td>
														<td>{{ getQuarterPlanAccomp(suitable,2)}}</td>
														<td>{{ getQuarterPlan(suitable,3)}}</td>
														<td>{{ getQuarterPlanAccomp(suitable,3)}}</td>
														<td>{{ getQuarterPlan(suitable,4)}}</td>
														<td>{{ getQuarterPlanAccomp(suitable,4)}}</td>

{#														<td></td>#}
														{#<td>
															<a class="btn btn-sm btn-danger taskList" title="Task List" data-suitableinitiative="{{principal.suitableInitiative.id}}" type="button">
																<i class="fa fa-tasks"></i>
															</a>
														</td>#}

													</tr>
												{% endif %}
											{% endfor %}
										{% else %}
											<tr>
												<td colspan="6">no records found</td>
											</tr>
										{% endfor %}
									</tbody>
								{% endif %}
							</table>
							<div class="pull-right" style="margin-right:10px;" id="custompaginator">{{ knp_pagination_render(principalReports) }}</div>
						</div>
                                                </div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div id="tasks" class="modal fade" role="dialog">
		<div
			class="modal-dialog " style="width:1200px;">
			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header bg-info">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">Task Lists
					</h4>
				</div>
				<div class="modal-body">
					<input type="hidden" name="performerValue" value="1">
					<table class="table" id="task_list_table">
						<tr>
							<th>Task Name</th>
							<th>Quarter</th>
							<th>Task Category</th>
							<th>Operational Office
							</th>
							<th>Performer Name
							</th>
							<th>Expected Value</th>
							<th>Accomplishment Value</th>
							<th>Percent</th>
						</tr>
					</table>
				</div>
				<div class="modal-footer justify-content-between">
					<button type="button" class="btn btn-default closes" data-dismiss="modal">Close</button>

				</div>


			</div>

		</div>
	</div>
{% endblock %}
{% block javascripts %}
	<script>
		$('#custompaginator .page-link').click(function (e) {
e.preventDefault();
$('#filteruserform').attr('action', $(this).attr('href'));

$('#filteruserform').submit();

});
	</script>
	<script>
		$('.taskList').click(function () {
$('#tasks').modal('show');
var suitableInitiativeId = $(this).attr('data-suitableInitiative');
$.ajax({
url:"{{ path('task_list_report') }}",
method: "POST",
data: {
suitableInitiativeId: suitableInitiativeId
},
dataType: "json",
success: function (data) {
var trHTML = '';
data = data.data;
var status=0;
$.each(data, function (i, item) {

if (status < 1) {
trHTML += '<tr><td>' + item.name + '</td>';}
else{
	trHTML += '<tr><td>' + "" + '</td>';
}
trHTML += '<td>'  + item.quarterName + '</td><td>' + item.taskCategory + '</td><td>' + item.operationalOffice + '</td><td>' + item.fullName + '</td><td>' + item.expectedValue + '</td><td>' + item.accomplishmentValue + 
'</td><td>' +   ((item.accomplishmentValue * 100)  / item.expectedValue).toFixed() + ' (%) </td</tr>';
if(item.taskCategory=="Core"){
	status=status+1;
}
});
console.log(status)
$('#task_list_table').append(trHTML);


}
});

})
	</script>
	<script>
		$('.closes').click(function () {
location.reload(true);

})
$('.close').click(function () {
location.reload(true);

})
	</script>
        
   <script type="text/javascript">  
                 function print1(strid)
                    {
                    if(confirm("Do you want to print?"))
                    {
                    var values = document.getElementById(strid);
                    var printing =window.open('','','left=0,top=0,width=50,height=40,toolbar=0,scrollbars=0,staÂ­?tus=0');
                    printing.document.write(values.innerHTML);
                    printing.document.close();
                    printing.focus();
                    printing.print();
                    printing.open();
                    }
                }
            </script>
            
             <script type="text/javascript">

    var xport = {
  _fallbacktoCSV: true,  
  toXLS: function(tableId, filename) {   
    this._filename = (typeof filename == 'undefined') ? tableId : filename;
    
    //var ieVersion = this._getMsieVersion();
    //Fallback to CSV for IE & Edge
    if ((this._getMsieVersion() || this._isFirefox()) && this._fallbacktoCSV) {
      return this.toCSV(tableId);
    } else if (this._getMsieVersion() || this._isFirefox()) {
      //alert("Not supported browser");
    }

    //Other Browser can download xls
    var htmltable = document.getElementById(tableId);
    var html = htmltable.outerHTML;

    this._downloadAnchor("data:application/vnd.ms-excel" + encodeURIComponent(html), 'xls'); 
  },
  toCSV: function(tableId, filename) {
    this._filename = (typeof filename === 'undefined') ? tableId : filename;
    // Generate our CSV string from out HTML Table
    var csv = this._tableToCSV(document.getElementById(tableId));
    // Create a CSV Blob
    var blob = new Blob([csv], { type: "text/csv" });

    // Determine which approach to take for the download
    if (navigator.msSaveOrOpenBlob) {
      // Works for Internet Explorer and Microsoft Edge
      navigator.msSaveOrOpenBlob(blob, this._filename + ".csv");
    } else {      
      this._downloadAnchor(URL.createObjectURL(blob), 'csv');      
    }
  },
  _getMsieVersion: function() {
    var ua = window.navigator.userAgent;

    var msie = ua.indexOf("MSIE ");
    if (msie > 0) {
      // IE 10 or older => return version number
      return parseInt(ua.substring(msie + 5, ua.indexOf(".", msie)), 10);
    }

    var trident = ua.indexOf("Trident/");
    if (trident > 0) {
      // IE 11 => return version number
      var rv = ua.indexOf("rv:");
      return parseInt(ua.substring(rv + 3, ua.indexOf(".", rv)), 10);
    }

    var edge = ua.indexOf("Edge/");
    if (edge > 0) {
      // Edge (IE 12+) => return version number
      return parseInt(ua.substring(edge + 5, ua.indexOf(".", edge)), 10);
    }

    // other browser
    return false;
  },
  _isFirefox: function(){
    if (navigator.userAgent.indexOf("Firefox") > 0) {
      return 1;
    }
    
    return 0;
  },
  _downloadAnchor: function(content, ext) {
      var anchor = document.createElement("a");
      anchor.style = "display:none !important";
      anchor.id = "downloadanchor";
      document.body.appendChild(anchor);

      // If the [download] attribute is supported, try to use it
      
      if ("download" in anchor) {
        anchor.download = this._filename + "." + ext;
      }
      anchor.href = content;
      anchor.click();
      anchor.remove();
  },
  _tableToCSV: function(table) {
    // We'll be co-opting `slice` to create arrays
    var slice = Array.prototype.slice;

    return slice
      .call(table.rows)
      .map(function(row) {
        return slice
          .call(row.cells)
          .map(function(cell) {
            return '"t"'.replace("t", cell.textContent);
          })
          .join(",");
      })
      .join("\r\n");
  }
};

  </script>

    
{% endblock %}
