{% extends 'base.html.twig' %}
{% block application_simple_title %}
	<strong>
		{% trans %}Strategic Management Information System{% endtrans %}</strong>
{% endblock %}
{% block mainTitle %}
	<li>
		<i class="icon-home home-icon"></i>
		<a href="">{% trans %}MIS{% endtrans %}</a>

		<span class="divider">
			<i class="arrow-icon"></i>
		</span>
	</li>
	<li>
		<i class="icon-home home-icon"></i>
		<a href="">{% trans %}SMIS{% endtrans %}</a>

		<span class="divider">
			<i class="arrow-icon"></i>
		</span>
	</li>

{% endblock %}
{% block subTitle %}
	<li class="active">{% trans %}Operational Task{% endtrans %}</li>
{% endblock %}
{% block body %}
	<input type="hidden" class="minDate" value="{{minDate}}">
	<input type="hidden" class="maxDate" value="{{maxDate}}">
	<input type="hidden" class="minDateEdit" value="{{minDateEdit}}">
	<div>

		{% for taskUser in taskUsers %}
			{% if loop.first %}
				<ul class="steps">
					<li data-step="1" class={% if taskUser.type == 1 %} "complete" {% elseif taskUser.type >= 1 %} "active" {% else %} {% endif %}>
						<span class="step">A</span>
						<span class="title">
							List Task</span>
					</li>
					<li data-step="2" class={% if taskUser.type == 1 %} "complete" {% elseif taskUser.type >= 1 %} "active" {% else %} {% endif %}>
						<span class="step">B</span>
						<span class="title">
							Assign Task
						</span>
					</li>

					<li
						data-step="3">
						{# class={% if taskAccomplishment.taskUser.type == 3 %} "complete" {% elseif taskAccomplishment.taskUser.type >= 3 %} "active" {% else %} {% endif %}> #}
						<span class="step">C</span>
						<span class="title">Accept Performers Report
						</span>
					</li>

					<li
						data-step="4">
						{# class={% if taskAccomplishment.taskUser.type == 4 %} "complete" {% elseif taskAccomplishment.taskUser.type >= 4 %} "active" {% else %} {% endif %}> #}
						<span class="step">D</span>
						<span class="title">
							Evaluate Performer
						</span>
					</li>
					<li
						data-step="5">
						{# class={% if taskAccomplishment.taskUser.type == 5 %} "complete" {% elseif taskAccomplishment.taskUser.type >= 5 %} "active" {% else %} {% endif %}> #}
						<span class="step">E</span>
						<span class="title">
							Send Report to Principals
						</span>
					</li>
				</ul>
			{% endif %}

		{% endfor %}
	</div>
	<div class="row">
		<div class="col-md-12 col-sm-12 widget-container-col" id="widget-container-col-8">
			<div class="widget-box widget-color-blue" id="widget-box-8">
				<div class="widget-header">
					{% set office = 0 %}
					<h5 class="widget-title bigger lighter">Operational Office
						{% if social == 1 %}

							Social Initiative
							{% else %}

						{% endif %}
						Total Remainig Weight=<div class="badge badge-danger">{{ 100 - countWeight}}</div>
					</h5>

					<div class="widget-toolbar">
						<span class="badge badge-info">
							{% trans %}Quarter{% endtrans %}
							:


							<strong>
								{{quarterName}}</strong>
						</span>

					</div>

					<div class="widget-toolbar">
						<span class="badge badge-warning">
							{% if social == 1 %}

								Social Initiative
								{% else %}

							{% endif %}

						</div>
					</div>

					<div class="widget-body">
						<div class="widget-toolbox" id="widget-toolbox-1">
							<div class="btn-toolbar">
								<div
									class="btn-group" style="margin-top:10px;margin-left:10px;">
									{# {% if is_granted('CREATE_PERSPECTIVE') %} #}

									{% if countWeight < 100 %}
										{% if social == 1 %}
											<a class="btn btn-primary  btn-white btn-round socialbtn" data-toggle="modal" data-target="#myModal">
												<i class="ace-icon fa fa-plus bigger-110 blue"></i>
												{% trans %}
												Create{% endtrans %}</a>
										{% else  %}
											<a class="btn btn-primary  btn-white btn-round social" data-toggle="modal" data-target="#myModal">
												<i class="ace-icon fa fa-plus bigger-110 blue"></i>
												{% trans %}
												Create{% endtrans %}</a>
										{% endif %}

									{% endif %}
									{% if countWeight >= 100 %}
										<a class="btn btn-primary btn-sm btn-white btn-round" data-toggle="modal" data-target="#assign">
											<i class="ace-icon fa fa-check bigger-110 blue"></i>
											{% trans %}
											Assign{% endtrans %}</a>
									{% endif %}
                                  
								
								</div>
                                  <div class="pull-right" style="margin-bottom:20px; margin-top:10px;">  <span class="badge badge-info text-white"> {{initiativeName}}</span>	</div>

                               
								{# <div class="pull-right"> #}
								{% if countWeight >= 100 %}

									<div class="row ">
                                    
										<form action="{{path('task_assign_pdf')}}" method="post">

											<div class="col-md-2 pull-right">

												<button class="btn btn-sm btn-danger t" type="submit">
													<i class="fa fa-file-pdf-o "></i>

												</button>
											</div>
											<div class="col-md-2 pull-right">
												<select autocomplete="off" name="user" class="form-control userlist select2  "></select>
											</div>
										</form>

									</div>
								{% endif %}


								{# </div> #}


							</div>
						</div>

						<div class="widget-main padding-16">
                         
							<div class="table-responsive">
								<form class="form-inline" method="post" style="display:inline;">

									<div class="input-group">
										<input type="text" class="form-control" name="search" placeholder="search"/>
										<div class="input-group-btn">
											<button type="submit" class="btn btn-default no-border btn-sm">
												<i class="ace-icon fa fa-search icon-on-right bigger-110"></i>
											</button>
										</div>
									</div>
								</form>
								{% if performerTasks %}


									<table class="table table-striped table-bordered table-hover" style="margin-top:10px;">
										<thead>
											<tr>
												<th>#</th>
												<th>TaskName</th>
												{% if social == 1 %}
													<th>Social</th>
												{% endif %}

												<th>Description</th>
												<th>Weight</th>
												<th>Quarter</th>
												<th>Assigned To</th>
												<th>Edit</th>


											</tr>
										</thead>
										<tbody>
											{% set count = 0 %}
											{% for performerTask in performerTasks %}
												<tr>
													{% set count = count + 1 %}
													<td>{{ count}}</td>
													<td>{{ performerTask.name }}</td>
													{% if social == 1 %}

														<td>{{ performerTask.social }}</td>
													{% endif %}
													<td>{{ performerTask.description }}</td>
													<td>{{ performerTask.weight }}</td>
													<td>{{ performerTask.quarter }}</td>
													<td>
														{% set statusaccept = 0 %}
														<table class="table table-bordered table-responsive-xg table-hover">
															<tr>
																<th>Start Date
																</th>
																<th>End Date
																</th>
																<th>Time Gap</th>
																<th>Quantity</th>
																<th>Reason</th>

															</tr>
															{% for taskUser in taskUsers %}
																{# {% if taskUser.status == 6 %} #}
																<tr {% if taskUser.status == 6 %} class="text-danger" {% endif %}>


																	{% if taskUser.taskAssign.performerTask.id == performerTask.id  %}
																		{% set statusaccept = taskUser.status %}
																		<td>{{taskUser.assignedTo.userInfo}}</td>
																		<td>
																			{{taskUser.taskAssign.startDate}}</td>
																		<td>
																			{{taskUser.taskAssign.endDate}}
																		</td>
																		<td>{{taskUser.taskAssign.timeGap}}</td>
																		<td>{{taskUser.taskAssign.expectedValue}}</td>

																		<td>{{taskUser.rejectReason}}
																			{% if taskUser.status == 6 %}
																				{# <form action="{{path('task_resend')}}" method="post"> #}
																				<input type="hidden" name="taskUserId" value="{{taskUser.id}}">

																				<button class="btn btn-sm btn-info resend " data-performid="{{taskUser.taskAssign.id}}" type="button" data-target="#resend">
																					Resend
																				</button>
																			{% endif %}
																		</td>


																	{% endif %}
																</tr>

															{% endfor %}

														</table>
													</td>
													<td>
														{% if countWeight < 100 %}

															<button class="btn btn-warning edit " data-taskid="{{performerTask.id}}" data-target="#edit" type="button">
																<i class="fa fa-edit"></i>
															</button>
														{% endif %}
													</td>
													<input type="hidden" class="countWeight1" value="{{countWeight}}">
													<input type="hidden" class="user" value="{{app.user.id}}">
                                                    <input type="hidden" class="quartertask" value="{{performerTask.quarter.id}}">
													<input type="hidden" class="task" value="{{performerTask.planAcomplishment.suitableInitiative.id}}">
													<input type="hidden" class="office" value="{{performerTask.planAcomplishment.suitableInitiative.principalOffice.id}}">

													<input type="hidden" class="userprincipal" value="{{app.user.id}}">


												</tr>
											{% else %}
												<tr>
													<td colspan="8">no records found</td>
												</tr>
											{% endfor %}

										</tbody>
									</table>
								{% endif %}

							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id="edit" class="modal fade" role="dialog">
			<div
				class="modal-dialog " style="width:800px;">
				<!-- Modal content-->
				<div class="modal-content">
					<div class="modal-header bg-info">
						<button type="button" class="close" data-dismiss="modal">&times;</button>

						<h4 class="modal-title">Edit Tasks


						</h4>

					</div>


					<form method="post" action="{{path('performer_task_value_edit')}}">
						<div class="modal-body">
							<input type="hidden" name="countWeight" class="countWeight">
							<table class="table" id="records_table1">
								<tr>

									<th>Task Name</th>
									<th>Weight</th>

									<th>Edit Weight</th>
								</tr>
							</table>
						</div>
						<div class="modal-footer justify-content-between">
							<button type="button" class="btn btn-default closes" data-dismiss="modal">Close</button>
							<button type="submit" name="stock-request" value="stock-request" class="btn btn-primary go">Edit</button>
						</div>

					</form>


				</div>

			</div>
		</div>
		{{ include('operational_task/modal.html.twig') }}
	{% endblock %}
	{% block javascripts %}
		<script src="{{asset('assets/plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js')}}"></script>
		<script>
			$('.edit').click(function () {
$('#edit').modal('show');

var perTaskId = $(this).attr('data-taskId');
var countWeight = $('.countWeight1').val()
$('.countWeight').val(countWeight)
$.ajax({
url:"{{ path('performer_task_value_edit') }}",
method: "POST",
data: {
perTaskId: perTaskId
},
dataType: "json",
success: function (data) {
var trHTML = '';
$.each(data, function (i, item) {
trHTML += '<tr><td>' + item.name + '</td><td>' + item.weight + '</td><td>' + '<input class="form-control" type="number" name="weight" class="form-group quantityBatch" placeholder="Weight" required> <input type="hidden" name="id" value="' + item.id + '" class="form-group">' + '</td>' + '</td> </tr>';


});
$('#records_table1').append(trHTML);

}
});
})
		</script>
		<script>
			$('.resend').click(function () {
$('#resend').modal('show');

var perTaskId = $(this).attr('data-performId');
var performerId = 1;
console.log(perTaskId)
$.ajax({
url:"{{ path('performer_task_value_edit') }}",
method: "POST",
data: {
perTaskId: perTaskId,
performerId: performerId
},
dataType: "json",
success: function (data) {
var trHTML = '';
startDate = data.startDate
data = data.data;

$.each(data, function (i, item) {

trHTML += '<tr><td>' + '<input class="form-control popupDatepicker" type="text" name="startDate" autocomplete="off"  placeholder="StartDate" ></td><td> <input class="form-control popupDatepicker"  type="text" name="endDate" autocomplete="off"  placeholder="endDate" required></td><td> <input class="form-control form-group" type="number" name="timeGap" max="6" placeholder="timeGap" required></td><td> <input class="form-control form-group" type="number" name="expectedValue"  placeholder="Quantity" required> <input type="hidden" name="id" value="' + item.id + '" class="form-group">' + '</td>' + '</td> </tr>';


});
$('#records_table2').append(trHTML);
var calendar = $.calendars.instance('ethiopian', 'am');
var minDate = $('.minDateEdit').val();
var maxDate = $('.maxDate').val();
minDate = minDate.split(",")
maxDate = maxDate.split(",")
$('.popupDatepicker').calendarsPicker({
calendar: calendar,
maxDate: calendar.newDate(parseInt(maxDate[0]), parseInt(maxDate[1]), parseInt(maxDate[2])),
minDate: calendar.newDate(parseInt(minDate[0]), parseInt(minDate[1]), parseInt(minDate[2]))
});
}
});
})
		</script>
		<script>
			$(function () {
$('.select2').css('width', '100%').select2({allowClear: true})
})
		</script>
		<script>
			$(document).ready(function () {

var select = $('.userlist')
var userprincipal = $('.office').val();
$.ajax({
url:"{{ path('user_fetch') }}",
method: "POST",
data: {
userprincipal: userprincipal
},
dataType: "json",
success: function (data) { // $('.department').children().remove()
for (let [key, value] of Object.entries(data)) {


select.append('<option value="' + value.id + '">' + value.fullName + ' </option>');


}
}
});
})
		</script>
		<script>
			$(document).ready(function () {
var task = $('.task').val();
var user = $('.user').val();
var quartertask= $('.quartertask').val();

var select = $('.crtask')

$.ajax({
url:"{{ path('task_fetch') }}",
method: "POST",
data: {
task: task,
user: user,
quartertask: quartertask
},
dataType: "json",
success: function (data) { // $('.department').children().remove()
for (let [key, value] of Object.entries(data)) {


select.append('<option value="' + value.id + '">' + value.name + ' </option>');


}
}
});
})
		</script>
		<script>
			$('.socialbtn').click(function () {
$('.social').show();

})
		</script>
		<script>
			$('.timeGap').keyup(function () {
var timeGap = $('.timeGap').val()
if (timeGap > 6) {
$('.error').text("maximum time gap is 6")
$('.assign').prop('disabled', true);
} else {
$('.error').text("")
$('.assign').prop('disabled', false);


}


})
		</script>
		<link
		rel="stylesheet" href="{{ asset('amharic/css/redmond.calendars.picker.css')}}">

		{# <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script> #}
		<script src="{{ asset('amharic/js/jquery.plugin.js')}}"></script>

		<script src="{{ asset('amharic/js/jquery.calendars')}}.js"></script>
		<script src="{{ asset('amharic/js/jquery.calendars')}}.plus.js"></script>
		<script src="{{ asset('amharic/js/jquery.calendars')}}.picker.js"></script>

		<script src="{{ asset('amharic/js/jquery.calendars')}}.ethiopian.js"></script>
		<script src="{{ asset('amharic/js/jquery.calendars')}}.ethiopian-am.js"></script>
		<script type="text/javascript" src="{{ asset('amharic/js/jquery.calendars')}}.picker-am.js"></script>

		<script>
			$(function () {
var calendar = $.calendars.instance('ethiopian', 'am');
var minDate = $('.minDate').val();
var maxDate = $('.maxDate').val();
minDate = minDate.split(",")
maxDate = maxDate.split(",")
console.log(minDate, maxDate)

$('.popupDatepicker').calendarsPicker({
calendar: calendar,
maxDate: calendar.newDate(parseInt(maxDate[0]), parseInt(maxDate[1]), parseInt(maxDate[2])),
minDate: calendar.newDate(parseInt(minDate[0]), parseInt(minDate[1]), parseInt(minDate[2]))
});
$('#popupDatepicker').calendarsPicker({calendar: calendar});

$('#inlineDatepicker').calendarsPicker({calendar: calendar, onSelect: showDate});
});

function showDate(date) {
alert('The date chosen is ' + date);
}
		</script>
	{% endblock %}
